ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if( !l1 ){
            return l2;
        }
        if( !l2 ){
            return l1;
        }

        stack<int> s1;
        stack<int> s2;
        
        while( l1 ){
            s1.push(l1->val);
            ListNode* t = l1;
            l1 = l1->next;
            delete t;
        }
        while( l2 ){
            s2.push(l2->val);
            ListNode* t = l2;
            l2 = l2->next;
            delete t;
        }
        
        stack<int> s;
        int c=0;
        while( !s1.empty() && !s2.empty() ){
            int d = s1.top() + s2.top() +c;
            c = d/10;
            d = d%10;
            s1.pop();
            s2.pop();
            s.push(d);
        }
        while( !s1.empty() ){
            int d = s1.top()  + c;
            c = d/10;
            d = d%10;
            s1.pop();
            s.push(d);
        }
        while( !s2.empty() ){
            int d = s2.top()  + c;
            c = d/10;
            d = d%10;
            s2.pop();
            s.push(d);
        }
        if( c!=0 ){
            s.push(c);
        }
        
        ListNode* fh = NULL;
        ListNode* ft = NULL;
        
        while( !s.empty() ){
            int d = s.top();
            s.pop();
            ListNode* newnode = new ListNode(d);
            if( fh == NULL ){
                fh = newnode;
            }
            else{
                ft->next = newnode;
            }
            ft = newnode;
            
        }
        return fh;
    }
